name: "tiny_yolo"
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "label"
  python_param {
    module: 'boxdatalayer'
    layer: 'BoxDataLayer'
    param_str: "{'image_list': '/data/Machine_Learning/ImageSet/voc-data/2007_val.txt','batch_size': 64,'image_size': 224,'side': 1,'version': 2}"
  }
}
layer {
  name: "conv1/3x3_s1"
  type: "Convolution"
  bottom: "data"
  top: "conv1/3x3_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}

layer {
  name: "conv1/relu_3x3"
  type: "ReLU"
  bottom: "conv1/3x3_s1"
  top: "conv1/3x3_s1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "pool1/3x3_s2"
  type: "Pooling"
  bottom: "conv1/3x3_s1"
  top: "pool1/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2/3x3_s1"
  type: "Convolution"
  bottom: "pool1/3x3_s2"
  top: "conv2/3x3_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}

layer {
  name: "conv2/relu_3x3"
  type: "ReLU"
  bottom: "conv2/3x3_s1"
  top: "conv2/3x3_s1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "pool2/3x3_s2"
  type: "Pooling"
  bottom: "conv2/3x3_s1"
  top: "pool2/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3/3x3_s1"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "conv3/3x3_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}

layer {
  name: "conv3/relu_3x3"
  type: "ReLU"
  bottom: "conv3/3x3_s1"
  top: "conv3/3x3_s1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "pool3/3x3_s2"
  type: "Pooling"
  bottom: "conv3/3x3_s1"
  top: "pool3/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4/3x3_s1"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "conv4/3x3_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}

layer {
  name: "conv4/relu_3x3"
  type: "ReLU"
  bottom: "conv4/3x3_s1"
  top: "conv4/3x3_s1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "pool4/3x3_s2"
  type: "Pooling"
  bottom: "conv4/3x3_s1"
  top: "pool4/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5/3x3_s1"
  type: "Convolution"
  bottom: "pool4/3x3_s2"
  top: "conv5/3x3_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}

layer {
  name: "conv5/relu_3x3"
  type: "ReLU"
  bottom: "conv5/3x3_s1"
  top: "conv5/3x3_s1"
  relu_param{
    negative_slope: 0.1
  }
}
layer {
  name: "conv6/3x3_s1"
  type: "Convolution"
  bottom: "conv5/3x3_s1"
  top: "conv6/3x3_s1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 15
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}


layer {
  name: "region_loss"
  type: "Python"
  bottom: "conv6/3x3_s1"
  bottom: "label"
  top: "det_loss"
  python_param {
    module: 'regionlosslayer'
    layer: 'RegionLossLayer'
    param_str: "{'num_class': 0, 'num_object': 3, 'anchors' :[0.4, 0.5, 1.2,1.3, 0.7, 0.8]}"
  }
  loss_weight: 1
}

